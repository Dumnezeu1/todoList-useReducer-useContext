{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\h3lld\\\\Desktop\\\\react\\\\todoList-useReducer-useContext\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\h3lld\\\\Desktop\\\\react\\\\todoList-useReducer-useContext\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var SET_TODOS = \"set_todos\";\nexport var ADD_TODO = \"add_todo\";\nexport var TOGGLE_TODO = \"toggle_todo\";\nexport var DELETE_TODO = \"delete_todo\";\nexport var UPDATE_TODO = \"update_todo\";\nexport default function todosReducer(state, action) {\n  var todoIndex = _toConsumableArray(state).findIndex(function (todo) {\n    return todo.idTodo === action.todoIndex;\n  });\n\n  switch (action.type) {\n    case TOGGLE_TODO:\n      return [].concat(_toConsumableArray(state.slice(0, todoIndex)), [_objectSpread({}, state[todoIndex], {\n        done: !state[todoIndex].done\n      })], _toConsumableArray(state.slice(todoIndex + 1, state.length)));\n\n    case ADD_TODO:\n      return [].concat(_toConsumableArray(state), [action.todo]);\n\n    case DELETE_TODO:\n      return state.filter(function (_, idx) {\n        return idx !== todoIndex;\n      });\n\n    case TOGGLE_TODO:\n      return [].concat(_toConsumableArray(state.slice(0, todoIndex)), [_objectSpread({}, state[todoIndex], {\n        description: \"test\"\n      })], _toConsumableArray(state.slice(todoIndex + 1, state.length)));\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\h3lld\\Desktop\\react\\todoList-useReducer-useContext\\src\\todosReducer.js"],"names":["SET_TODOS","ADD_TODO","TOGGLE_TODO","DELETE_TODO","UPDATE_TODO","todosReducer","state","action","todoIndex","findIndex","todo","idTodo","type","slice","done","length","filter","_","idx","description"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AAClD,MAAMC,SAAS,GAAG,mBAAIF,KAAJ,EAAWG,SAAX,CAChB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,MAAL,KAAgBJ,MAAM,CAACC,SAA3B;AAAA,GADY,CAAlB;;AAIA,UAAQD,MAAM,CAACK,IAAf;AACE,SAAKV,WAAL;AACE,0CACKI,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeL,SAAf,CADL,sBAEOF,KAAK,CAACE,SAAD,CAFZ;AAEyBM,QAAAA,IAAI,EAAE,CAACR,KAAK,CAACE,SAAD,CAAL,CAAiBM;AAFjD,8BAGKR,KAAK,CAACO,KAAN,CAAYL,SAAS,GAAG,CAAxB,EAA2BF,KAAK,CAACS,MAAjC,CAHL;;AAKF,SAAKd,QAAL;AACE,0CAAWK,KAAX,IAAkBC,MAAM,CAACG,IAAzB;;AACF,SAAKP,WAAL;AACE,aAAOG,KAAK,CAACU,MAAN,CAAa,UAACC,CAAD,EAAIC,GAAJ;AAAA,eAAYA,GAAG,KAAKV,SAApB;AAAA,OAAb,CAAP;;AACF,SAAKN,WAAL;AACE,0CACKI,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeL,SAAf,CADL,sBAEOF,KAAK,CAACE,SAAD,CAFZ;AAEyBW,QAAAA,WAAW,EAAE;AAFtC,8BAGKb,KAAK,CAACO,KAAN,CAAYL,SAAS,GAAG,CAAxB,EAA2BF,KAAK,CAACS,MAAjC,CAHL;;AAKF;AACE,aAAOT,KAAP;AAlBJ;AAoBD","sourcesContent":["export const SET_TODOS = \"set_todos\";\r\nexport const ADD_TODO = \"add_todo\";\r\nexport const TOGGLE_TODO = \"toggle_todo\";\r\nexport const DELETE_TODO = \"delete_todo\";\r\nexport const UPDATE_TODO = \"update_todo\";\r\n\r\nexport default function todosReducer(state, action) {\r\n  const todoIndex = [...state].findIndex(\r\n    todo => todo.idTodo === action.todoIndex\r\n  );\r\n\r\n  switch (action.type) {\r\n    case TOGGLE_TODO:\r\n      return [\r\n        ...state.slice(0, todoIndex),\r\n        { ...state[todoIndex], done: !state[todoIndex].done },\r\n        ...state.slice(todoIndex + 1, state.length)\r\n      ];\r\n    case ADD_TODO:\r\n      return [...state, action.todo];\r\n    case DELETE_TODO:\r\n      return state.filter((_, idx) => idx !== todoIndex);\r\n    case TOGGLE_TODO:\r\n      return [\r\n        ...state.slice(0, todoIndex),\r\n        { ...state[todoIndex], description: \"test\" },\r\n        ...state.slice(todoIndex + 1, state.length)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}